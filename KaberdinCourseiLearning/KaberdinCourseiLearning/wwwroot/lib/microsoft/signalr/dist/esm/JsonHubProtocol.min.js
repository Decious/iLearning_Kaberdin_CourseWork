import{MessageType as n}from"./IHubProtocol";import{LogLevel as i}from"./ILogger";import{TransferFormat as r}from"./ITransport";import{NullLogger as u}from"./Loggers";import{TextMessageFormat as t}from"./TextMessageFormat";var f="json",e=function(){function e(){this.name=f;this.version=1;this.transferFormat=r.Text}return e.prototype.parseMessages=function(r,f){var c,s,o,h,l,e;if(typeof r!="string")throw new Error("Invalid input for JSON hub protocol. Expected a string.");if(!r)return[];for(f===null&&(f=u.instance),c=t.parse(r),s=[],o=0,h=c;o<h.length;o++){if(l=h[o],e=JSON.parse(l),typeof e.type!="number")throw new Error("Invalid payload.");switch(e.type){case n.Invocation:this.isInvocationMessage(e);break;case n.StreamItem:this.isStreamItemMessage(e);break;case n.Completion:this.isCompletionMessage(e);break;case n.Ping:break;case n.Close:break;default:f.log(i.Information,"Unknown message type '"+e.type+"' ignored.");continue}s.push(e)}return s},e.prototype.writeMessage=function(n){return t.write(JSON.stringify(n))},e.prototype.isInvocationMessage=function(n){this.assertNotEmptyString(n.target,"Invalid payload for Invocation message.");n.invocationId!==undefined&&this.assertNotEmptyString(n.invocationId,"Invalid payload for Invocation message.")},e.prototype.isStreamItemMessage=function(n){if(this.assertNotEmptyString(n.invocationId,"Invalid payload for StreamItem message."),n.item===undefined)throw new Error("Invalid payload for StreamItem message.");},e.prototype.isCompletionMessage=function(n){if(n.result&&n.error)throw new Error("Invalid payload for Completion message.");!n.result&&n.error&&this.assertNotEmptyString(n.error,"Invalid payload for Completion message.");this.assertNotEmptyString(n.invocationId,"Invalid payload for Completion message.")},e.prototype.assertNotEmptyString=function(n,t){if(typeof n!="string"||n==="")throw new Error(t);},e}();export{e as JsonHubProtocol};