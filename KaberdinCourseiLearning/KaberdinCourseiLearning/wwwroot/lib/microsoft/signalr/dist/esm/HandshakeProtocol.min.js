import{TextMessageFormat as n}from"./TextMessageFormat";import{isArrayBuffer as t}from"./Utils";var i=function(){function i(){}return i.prototype.writeHandshakeRequest=function(t){return n.write(JSON.stringify(t))},i.prototype.parseHandshakeResponse=function(i){var c,o,s,f,e,u,r,l,h;if(t(i)||typeof Buffer!="undefined"&&i instanceof Buffer){if(f=new Uint8Array(i),u=f.indexOf(n.RecordSeparatorCode),u===-1)throw new Error("Message is incomplete.");r=u+1;o=String.fromCharCode.apply(null,f.slice(0,r));s=f.byteLength>r?f.slice(r).buffer:null}else{if(e=i,u=e.indexOf(n.RecordSeparator),u===-1)throw new Error("Message is incomplete.");r=u+1;o=e.substring(0,r);s=e.length>r?e.substring(r):null}if(l=n.parse(o),h=JSON.parse(l[0]),h.type)throw new Error("Expected a handshake response from the server.");return c=h,[s,c]},i}();export{i as HandshakeProtocol};