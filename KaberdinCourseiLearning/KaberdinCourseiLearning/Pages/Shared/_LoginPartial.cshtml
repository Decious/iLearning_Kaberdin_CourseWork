@using Microsoft.AspNetCore.Identity
@using Microsoft.Extensions.Configuration
@using KaberdinCourseiLearning.Data.Models;
@using KaberdinCourseiLearning.Managers;
@inject SignInManager<CustomUser> SignInManager
@inject CustomUserManager UserManager
@inject IConfiguration Configuration
@inject IViewLocalizer Localizer 

    <a href="#" role="button" style="display:inline-block" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
        @{
            string picture;
            CustomUser currentUser = null;
            if (SignInManager.IsSignedIn(User))
            {
                currentUser = await UserManager.GetUserAsync(User);
                picture = currentUser.AvatarUrl;
            }
            else
            {
                picture = "https://res.cloudinary.com/ilearningcourse/image/upload/v1610032591/Avatar/default.webp";
            }
        }
        <img class="img-fluid rounded-circle" height="40" width="40" src="@picture" />
    </a>
    <div class="dropdown-menu text-center" aria-labelledby="dropdownMenuLink" x-placement="bottom-start" style="position: absolute; will-change: transform; top: 0px; left: 0px; transform: translate3d(-5px, 38px, 0px);">
        @{
            if (SignInManager.IsSignedIn(User))
            {
                <p class="dropdown-header text-center">@currentUser.UserName</p>
                <div class="dropdown-divider"></div>
                <a class="nav-link" asp-area="User" asp-page="/Profile" asp-route-name="@currentUser.UserName"><i class="fa fa-home"></i> @Localizer["My page"]</a>
                <a class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage"><i class="fa fa-cog"></i> @Localizer["Settings"]</a>
                if (await UserManager.IsInRoleAsync(currentUser, RoleNames.ROLE_ADMINISTRATOR))
                {
                    <a class="nav-link" asp-area="" asp-page="/AdminPanel"><i class="fa fa-hammer"></i> @Localizer["Admin-Panel"]</a>
                }
                <a class="nav-link" asp-area="Identity" asp-page="/Account/Logout"><i class="fas fa-sign-out-alt"></i> @Localizer["Logout"]</a>
            }
            else
            {
                <p class="dropdown-header text-center">@Localizer["Guest"]</p>
                <div class="dropdown-divider"></div>
                <a class="nav-link" asp-area="Identity" asp-page="/Account/Register"><i class="fa fa-user-plus"></i> @Localizer["Register"]</a>
                <a class="nav-link" asp-area="Identity" asp-page="/Account/Login"><i class="fas fa-sign-in-alt"></i> @Localizer["Login"]</a>
            }
            <p class="dropdown-header">@Localizer["Preferences"]</p>
            <div class="dropdown-divider"></div>
            <label class="text-primary" for="dropdownThemeBtn">@Localizer["Light theme"]</label>
            <input type="checkbox" id="dropdownThemeBtn" name="themeBtn" onclick="toggleTheme(this)">

            var currentCulture = System.Threading.Thread.CurrentThread.CurrentCulture.Name;
            var cultures = Configuration.GetSection("Localization").GetChildren().ToDictionary(x => x.Key, x => x.Value);
            var uri = $"{Context.Request.Path}{Context.Request.QueryString}";

            <form asp-controller="Culture" asp-action="SetCulture">
                <select name="culture" class="form-control-sm" onchange="this.form.submit()">
                    @foreach (var culture in cultures)
                    {
                        if (currentCulture == culture.Key)
                        {
                            <option selected value="@culture.Key">@culture.Value</option>
                        }
                        else
                        {
                            <option value="@culture.Key">@culture.Value</option>
                        }
                    }
                </select>
                <input hidden name="returnUri" value="@uri" />
            </form>
        }
    </div>
