@page
@model KaberdinCourseiLearning.Areas.Item.Pages.CreateModel
@using KaberdinCourseiLearning.Managers;
@using System.Text.Json;
@inject CollectionManager CollectionManager
@Html.AntiForgeryToken()
<link href="~/lib/tagify/tagify.css" rel="stylesheet" />
<link href="~/css/Product/Product.css" rel="stylesheet" />
<div class="container text-center">
    @if (Model.isEdit)
    {
        <h3>Edit an item</h3>
        <input hidden id="productID" value="@Model.Product.ProductID" />
    }
    else
    {
        <h3>Add an item</h3>
        <input hidden id="collectionID" value="@Model.Collection.CollectionID" />
    }
    <form method="post" class="card p-3">
        <div class="container">
            <div class="form-group row">
                <label class="col-md-2" for="Name">Name</label>

                <input class="form-control col-md-10" id="Name" value="@Model.Product.Name" />
            </div>
            <div class="form-group row">
                <label class="col-md-2" for="Tags">Tags</label>
                @{
                    var tags = Model.Product.Tags.Split(",");
                    var tagsJson = JsonSerializer.Serialize(tags);
                    <textarea class="form-control col-md-10 text-left" id="Tags" whitelist="@Model.Tags" placeholder="Tags">@tagsJson</textarea>
                }
            </div>
            @{
                foreach (var column in Model.Columns)
                {
                    string initial = "";
                    string inner = "";
                    if (Model.isEdit)
                    {
                        var value = Model.ColumnValues[column.ColumnID];
                        initial = $" value='{value}' checked='{value}' ";
                        if (column.TypeID == 5) inner = value;
                    }
                    <div class="form-group row">
                        <label class="col-md-2" for="@column.ColumnName">@column.ColumnName</label>
                        @Html.Raw(CollectionManager.GetColumnTypeHtml(column.TypeID, $"name='columnValue' {initial} id={column.ColumnID} class='form-control col-md-10'", inner))
                    </div>
                }

                var btnContent = "Add product";
                if (Model.isEdit)
                {
                    btnContent = "Edit product";
                }
                <button class="btn btn-outline-primary" id="submitBtn"><i class="fa fa-plus-square"></i> @btnContent</button>
            }
        </div>
    </form>
</div>
<script src="~/lib/jquery/dist/jquery.js"></script>
<script src="~/lib/tagify/tagify.min.js"></script>
<script src="~/lib/tagify/jQuery.tagify.min.js"></script>
<script src="~/js/Product/Create.js"></script>
